name: CI

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  checks:
    name: "Checks"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
        requirements: ['-r requirements.txt']
        include:
          # historical requirements
          - name: "2020-early dependencies"
            requirements: numpy==1.17.4 pandas~=0.25.3 SQLAlchemy~=1.3.11 psycopg2~=2.8.4 PyMySQL==1.0.2
            pytest_flags: --ignore=siuba/dply/forcats.py siuba
            python-version: 3.6
          # current
          - name: "2020-mid dependencies"
            python-version: 3.8
            requirements: numpy~=1.19.1 pandas~=1.1.0 SQLAlchemy~=1.3.18 psycopg2~=2.8.5 PyMySQL==1.0.2
          - name: "2021-mid dependencies"
            python-version: 3.8
            requirements: numpy~=1.19.1 pandas~=1.1.0 SQLAlchemy~=1.4.13 psycopg2~=2.8.5 PyMySQL==1.0.2
            latest: true
          - name: "2022-early dependencies"
            python-version: 3.8
            requirements: numpy~=1.22.0 pandas~=1.3.5 SQLAlchemy~=1.4.29 psycopg2-binary~=2.9.3 PyMySQL==1.0.2
            latest: true
          - name: "2022-early dependencies"
            python-version: 3.10.1
            requirements: numpy~=1.22.0 pandas~=1.3.5 SQLAlchemy~=1.4.29 psycopg2-binary~=2.9.3 PyMySQL==1.0.2
            latest: true

    steps:
      - uses: actions/checkout@v2
      - name: Run docker-compose
        run: |
          docker-compose up --build -d
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install $REQUIREMENTS
          python -m pip install -r requirements-test.txt
          python -m pip install .
        env:
          REQUIREMENTS: ${{ matrix.requirements }}
      - name: Test with pytest
        run: |
          make test-travis
        env:
          SB_TEST_PGPORT: 5432
          PYTEST_FLAGS: ${{ matrix.pytest_flags }}

      # optional step for running bigquery tests ----
      - name: Set up Cloud SDK
        if: ${{(contains(github.ref, 'bigquery') || contains(github.ref, 'refs/tags')) && matrix.latest}}
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: siuba-tests
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Test bigquery
        if: ${{(contains(github.ref, 'bigquery') || contains(github.ref, 'refs/tags')) && matrix.latest}}
        run: |
          pip install git+https://github.com/googleapis/python-bigquery-sqlalchemy.git pandas-gbq==0.15.0

  test-bigquery:
    name: "Test BigQuery"
    runs-on: ubuntu-latest
    if: contains(github.ref, 'bigquery') || contains(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-test.txt
          python -m pip install git+https://github.com/machow/pybigquery.git pandas-gbq==0.15.0
          python -m pip install .
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: siuba-tests
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Test with pytest
        run: |
          pytest siuba -m bigquery
        env:
          SB_TEST_BQDATABASE: "ci_github"


  build-docs:
    name: "Build Documentation"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main' || contains(github.ref, 'docs')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt
          python -m pip install .
      - uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: '2.17.0.1'
      - name: Make docs
        run: |
          make docs-build

      # push to netlify ----
      - name: Netlify docs preview
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          npm install -g netlify-cli
          netlify deploy --dir=docs/_build/html --alias=${GITHUB_REPOSITORY#*/}-${PR_NUMBER}
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}

      - name: Add netlify link PR comment
        uses: actions/github-script@v3
        if: ${{ github.event_name == 'pull_request' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const suffix = "--siuba-previews.netlify.app"
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Preview url: https://" + context.repo.repo + "-" + process.env.PR_NUMBER + suffix
            })
        env:
          PR_NUMBER: ${{ github.event.number }}


  deploy:
    name: "Deploy to PyPI"
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs: [checks, test-bigquery]
    steps:
      - uses: actions/checkout@v2
      - name: "Set up Python 3.8"
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: "Build Package"
        run:
          python setup.py build sdist

      # test deploy ----
      - name: "Test Deploy to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
        if: startsWith(github.event.release.name, 'TEST')
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      # prod deploy ----
      - name: "Deploy to PyPI"
        uses: pypa/gh-action-pypi-publish@master
        if: "!startsWith(github.event.release.name, 'TEST')"
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
